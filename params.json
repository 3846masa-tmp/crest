{"name":"Crest","tagline":"REST API Server for MongoDB","body":"# crest\r\n\r\n[crest](http://github.com/cordazar/crest) is a REST API Server for MongoDB.\r\ncrest stands for [Cygnus](http://en.wiktionary.org/wiki/Cygnus) REST.\r\n\r\n\r\n## Installation\r\n\r\n### Recommended way\r\n\tnpm install crest -g\r\n\r\nThis will install crest globally so that it may be run from the command line.\r\n\r\n### As node.js module\r\n\tnpm install crest\r\n\r\nThis will install crest as a module to be used as a part of some other project.\r\n\r\n### Clone with git\r\n\tgit clone git://github.com/Cordazar/crest.git\r\n\r\n\r\n## Usage\r\nIf installed globally you can just run\r\n\r\n\tcrest\r\n\r\n\r\n### Quick try\r\nAfter starting the server you can quickly try it out by issuing the following from the command line:\r\n\r\n\tcurl -d '{ \"example key\" : \" }' -H \"Content-Type: application/json\" http://localhost:3500/tests/example\r\n\r\nThis should add a document to the collection **example** in database **tests** looking similar to this: \r\n\r\n\t{ \"A1\": 201, \"_id\": ObjectId(\"4e90e196b0c7f4687000000e\") }\r\n\r\n### Supported REST requests\r\n* `GET /db/collection` - Returns all documents\r\n* `GET /db/collection` - Returns all documents (query and options in GET body)\r\n* `GET /db/collection?query=%7B%22isDone%22%3A%20false%7D` - Returns all documents satisfying query\r\n* `GET /db/collection?query=%7B%22isDone%22%3A%20false%7D&limit=2&skip=2` - Ability to add options to query (limit, skip, etc)\r\n* `GET /db/collection/id` - Returns document with _id_\r\n* `POST /db/collection` - Insert new document in collection (document in POST body)\r\n* `PUT /db/collection/id` - Update document with _id_ (updated document in PUT body)\r\n* `DELETE /db/collection/id` - Delete document with _id_\r\n\r\n### Content Type\r\n* Please make sure `application/json` is used as Content-Type when using POST/PUT/GET with data in request body.\r\n\r\n\r\n## Setup\r\n\r\n### Configuration parameters\r\n* `db` [object]\r\n\t* `host` [string]\r\n\t* `port` [string]\r\n    * `username` [string]\r\n    * `password` [string]\r\n* `server` [object]\r\n\t* `port` [string]\r\n\t* `address` [string]\r\n* `flavor` [string] _mongodb_ or _normal_\r\n* `debug` [boolean]\r\n\r\n#### Flavors\r\n* Choose **mongodb** as flavor to keep using *_id* as primary key for a document.\r\n* Choose **normal** as flavor if you want to change *_id* to *id*\r\n\r\n### Dependencies\r\nApplication dependencies are sorted under dependencies in _package.json_ while test dependencies are sorted under devDependencies. \r\nAll dependencies can be installed via `npm install -l`\r\n\r\n\r\n## Tests\r\nBasic tests are available and can be run via [mocha](http://visionmedia.github.com/mocha/).\r\n\r\n\r\n## License\r\n  \r\nThe MIT License (MIT)\r\nCopyright (c) 2013 Ricard Aspeljung\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}